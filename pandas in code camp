import pandas as pd
import numpy as np

pandas series

gl = pd.Series([22.8,34.8,54.6,66.9,33.2,42.4])
gl

gl2 = pd.Series([[22,33,44,55,66,67,77],
                 [39,55,22,44,55,44,22]])
gl2

gl.name = 'it is  float'
gl2.name = 'it is integer '

gl

gl2

gl.values

#### they are actully backed by numpy array

type(gl.values)

#### they may be look like python or numpy lists ,but they are actually more than python dict's

### a seris has an index or list  that automates the index

gl[1]

gl[2]

gl.index

gl.index =[
    "india",
    "hongkong",
    "mumbai",
    "north america",
    "ireland",
    "greenland",
    
]
gl

pd.Series({
    'jone':900000,
    'shiny':1000000,
    'joel':20000,
    'jeffery':50000,
    'carol':69004,},
    
    name = 'mothly salary of each person')

pd.Series (
    [30395,9596,23455,23456,344566],
index =['jone','carol','jeffery','joel','shiny'],
name = 'income of each person')

pd.Series(gl, index = ['jone','andrew','harris','shiny','joel'])

gl[['india']]

gl[['india','hongkong']]


gl.iloc[[-1]]

gl.iloc[-1]


gl.iloc[[0,-1]]

#### in pandas unlike the numpy it will give the slicing from end to end point

gl['india' : 'ireland']

# while in numpy 
gl[:2]

gl > 70

 gl[gl < 35]

gl.mean()

gl.std()

certificates_earned = pd.DataFrame({
    'Certificates': [8, 2, 5, 6],
    'Time (in months)': [16, 5, 9, 12]
})

certificates_earned.index = ['Tom', 'Kris', 'Ahmad', 'Beau']

print(certificates_earned.iloc[2])

df = pd.DataFrame({
    'population': [32749,47294,63926,85254,92744,384638,93763],
    'GDP':[1245645,2356431,6675456,4346843,5356743,4467654,4687654],
    'Surface area':[345342,76453,678865,3454674,776543,45346,453456],
     'HGd':[3453,34656,64533,53466,23465,34563,34345],
    'continent': ['asia','north america','europe','asia','south america','africa','europe']
    
},columns = ['population','GDP','Surface area','Hgd','continent'])

df. index =[ 'india','canada','sweden','china','brizal','nigeria','norway']
df


df['population' ] > 50878

df.loc[df['population' ] > 50878]

df.loc[df['population' ] > 50878, 'population']

df.loc[df['population' ] > 50878,[ 'population','GDP']]

df.drop(['nigeria'])

df.drop(['norway','china'])

df.drop(columns = ['population','Hgd'])

crises = pd.Series([-1_00_000,-3],index = ['GDP','Surface area'])

crises

df[['GDP','Surface area']]+ crises

lang = pd.Series(['Chinese','Canadian','Spanish'],
                index = ['china','canada','Spain'],
                name = 'languages')

df['languages'] = lang

df

df2 =df

df2.rename(columns ={'Surface area': 'SA',
                     'Hgd':'HGD'},
          index = {'canada': 'CA',
                   'india': 'IND'})

df2.append(pd.Series({'population':2000,
            'GDP': 5000},name = 'garkand'))

df2.loc['china'] = pd.Series({'population':1_400_000_000, 'continent':'asia'})
df2

df2.drop('brizal',inplace = True)
df2

df2.reset_index()

df2.set_index('population')

df2['GDP'] / df2['Surface area']

df2['Surface area per GDP'] =df2 ['GDP'] /df2['Surface area']
df2
